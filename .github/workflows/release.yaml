name: Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Version Level'
        required: true
        default: 'minor'
        type: choice
        options:
        - major
        - minor
        - patch

jobs:
  release:
    name: Publish creates.io and create github release
    runs-on: ubuntu-latest

    steps:
    - name: Setup code
      uses: actions/checkout@v3
      # Fetch all histories and tags to create release note
      with: { fetch-depth: 0 }

    - name: Setup release tools
      run: cargo install cargo-release

    - name: Publish creates.io(with git tag)
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        cargo release ${{ github.event.inputs.level }} --execute --no-confirm -v
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Create github release
      run: gh release create ${{ github.ref_name }} --generate-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_assets:
    name: Upload assets
    pneeds: [release]
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - target: x86_64-apple-darwin
          os: macos-latest
        - target: aarch64-apple-darwin
          os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup code
      uses: actions/checkout@v3

    - name: Setup Rust toolchain
      run: |
        rustup set profile minimal
        rustup install stable
        rustup override set stable
        rustup target add ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target=${{ matrix.target }}

    - name: Create assets
      run: |
        tar -acvf ${{ env.NAME }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release ${{ env.NAME }}
        set -e
        ls -la ${{ env.NAME }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz

    - name: Upload assets
      run: gh release upload ${{ github.ref_name }} ./${{ env.NAME }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
